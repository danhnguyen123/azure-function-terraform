name: CD Terraform Pipeline 

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      runApply:
        description: 'Run Terraform Apply? (True/False)' 
        required: true
        type: choice
        default: 'False'
        options:
          - 'True'
          - 'False'

jobs:
  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ./environments/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -out planfile.tfplan -var-file ./environments/terraform.tfvars.json

    - name: Upload plan file
      uses: actions/upload-artifact@v2
      with:
        name: planfile
        path: terraform/planfile.tfplan

  apply:
    name: 'Terraform Apply'
    if: github.event.inputs.runApply == 'True'
    needs: plan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend-config ./environments/backend.tfvars

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Download plan file
      uses: actions/download-artifact@v2
      with:
        name: planfile
        path: terraform

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve planfile.tfplan 

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}  
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}  
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}  
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}  